set limit table-entries 400000
set optimization normal
set limit states 1623000
set limit src-nodes 1623000

#System aliases
  
loopback = "{ lo0 }"
WAN = "{ ix0 }"
LAN = "{ ix1.1881 }"
CONSOLE = "{ igb0 }"
SYNC = "{ igb1 }"
ESXMGMT = "{ ix1.1892 }"
ESXIPMI = "{ ix1.1893 }"

#SSH Lockout Table
table <sshlockout> persist
table <webConfiguratorlockout> persist
#Snort tables
table <snort2c>
table <virusprot>
table <bogons> persist file "/etc/bogons"
table <negate_networks> 

# User Aliases 
table <bgp_peer> {   141.142.191.12 } 
bgp_peer = "<bgp_peer>"
table <client_cerberus> persist
client_cerberus = "<client_cerberus>"
table <client_dev01> persist
client_dev01 = "<client_dev01>"
table <client_lsst_dev> {   141.142.237.0/24 } 
client_lsst_dev = "<client_lsst_dev>"
table <client_manage> {   141.142.143.166/32  141.142.143.136/32  141.142.148.61/32  141.142.148.18/32  141.142.148.19/32  141.142.23.64/32  141.142.171.9/32 } 
client_manage = "<client_manage>"
table <client_qualysQ3> {   141.142.148.51 } 
client_qualysQ3 = "<client_qualysQ3>"
condor_glideins_svc = "{   55000:59999 }"
table <data_backbone_temp> {   141.142.181.18  141.142.181.19 } 
data_backbone_temp = "<data_backbone_temp>"
full_esxi_tcp_svc = "{   22  53  80  443  902:903  9000  9080 }"
full_esxi_udp_svc = "{   53  902 }"
ipmi_tcp_svc = "{   22  443  5900:5901 }"
ipmi_udp_svc = "{   161  623 }"
table <lsst_2018_hotel> {   4.79.185.94/32  209.234.166.0/24 } 
lsst_2018_hotel = "<lsst_2018_hotel>"
table <ncsa_vsphere> {   141.142.193.6 } 
ncsa_vsphere = "<ncsa_vsphere>"
table <net_caltech_ipac> {   134.4.251.28  134.4.90.117  134.4.79.110  134.4.20.205  134.4.61.133  134.4.61.149  134.4.61.191 } 
net_caltech_ipac = "<net_caltech_ipac>"
table <net_ctio> {   139.229.136.0/24 } 
net_ctio = "<net_ctio>"
table <net_duke> {   152.3.0.0/16 } 
net_duke = "<net_duke>"
table <net_harvard> persist
net_harvard = "<net_harvard>"
table <net_lsst_aura> {   140.252.0.0/16 } 
net_lsst_aura = "<net_lsst_aura>"
table <net_ncsa3003> {   141.142.237.0/24  141.142.238.0/24 } 
net_ncsa3003 = "<net_ncsa3003>"
table <net_ncsavpn> {   141.142.146.0/24 } 
net_ncsavpn = "<net_ncsavpn>"
table <net_princeton> {   128.112.0.0/16  140.180.0.0/16  204.153.48.0/23  66.180.177.0/24 } 
net_princeton = "<net_princeton>"
table <net_slac> {   134.79.63.65  134.79.68.1  134.79.208.1  134.79.212.193  134.79.230.1  134.79.64.1  134.79.65.1  134.79.66.1  134.79.89.129  134.79.225.1  134.79.227.65  134.79.237.243 } 
net_slac = "<net_slac>"
table <net_upittsburg> {   136.142.239.0/25 } 
net_upittsburg = "<net_upittsburg>"
table <net_uwashington> {   128.208.0.0/16  128.95.0.0/16  140.142.0.0/16  198.48.64.0/19  205.175.96.0/19  69.91.128.0/17  173.250.128.0/17  108.179.128.0/18 } 
net_uwashington = "<net_uwashington>"
table <net_uwisconsin> {   128.104.0.0/16  144.92.0.0/16  72.33.0.0/16 } 
net_uwisconsin = "<net_uwisconsin>"
oracle_svc = "{   1521 }"
partial_esxi_tcp_svc = "{   22  443  902:903 }"
qserv_dax01_svc = "{   5000:5005  8080  80  443 }"
table <server_adm> persist
server_adm = "<server_adm>"
table <server_bastion> persist
server_bastion = "<server_bastion>"
table <server_IRSTnagios> {   141.142.148.10  10.142.228.15 } 
server_IRSTnagios = "<server_IRSTnagios>"
table <server_kub017> {   141.142.181.201 } 
server_kub017 = "<server_kub017>"
table <server_lspdev> persist
server_lspdev = "<server_lspdev>"
table <server_monitor> persist
server_monitor = "<server_monitor>"
table <server_qserv_dax01> {   141.142.181.182 } 
server_qserv_dax01 = "<server_qserv_dax01>"
table <server_sui_proxy01> {   141.142.181.119 } 
server_sui_proxy01 = "<server_sui_proxy01>"
table <server_sui_tomcat01> {   141.142.181.120 } 
server_sui_tomcat01 = "<server_sui_tomcat01>"
table <server_verify00> {   141.142.160.37 } 
server_verify00 = "<server_verify00>"
table <server_verifyworker> {   141.142.181.64  141.142.181.65  141.142.181.66  141.142.181.67  141.142.181.68  141.142.181.69  141.142.181.70  141.142.181.71  141.142.181.72  141.142.181.73  141.142.181.74  141.142.181.75  141.142.181.76  141.142.181.77  141.142.181.78  141.142.181.79  141.142.181.80  141.142.181.81  141.142.181.82  141.142.181.83  141.142.181.84  141.142.181.85  141.142.181.86  141.142.181.87  141.142.181.88  141.142.181.89  141.142.181.90  141.142.181.91  141.142.181.92  141.142.181.93  141.142.181.94  141.142.181.95  141.142.181.96  141.142.181.97  141.142.181.98  141.142.181.99  141.142.181.100  141.142.181.101  141.142.181.102  141.142.181.103  141.142.181.104  141.142.181.105  141.142.181.106  141.142.181.107  141.142.181.108  141.142.181.109  141.142.181.110  141.142.181.111 } 
server_verifyworker = "<server_verifyworker>"
table <server_verifyworker45> {   141.142.181.108 } 
server_verifyworker45 = "<server_verifyworker45>"
table <servers_181net> {   141.142.181.2  141.142.181.3  141.142.181.4  141.142.181.5  141.142.181.6  141.142.181.7  141.142.181.8  141.142.181.9  141.142.181.10  141.142.181.11  141.142.181.12  141.142.181.13  141.142.181.14  141.142.181.15  141.142.181.16  141.142.181.17  141.142.181.18  141.142.181.19  141.142.181.20  141.142.181.21  141.142.181.22  141.142.181.23  141.142.181.24  141.142.181.25  141.142.181.26  141.142.181.27  141.142.181.28  141.142.181.29  141.142.181.30  141.142.181.31  141.142.181.32  141.142.181.33  141.142.181.34  141.142.181.35  141.142.181.36  141.142.181.37  141.142.181.38  141.142.181.39  141.142.181.40  141.142.181.41  141.142.181.42  141.142.181.43  141.142.181.44  141.142.181.45  141.142.181.46  141.142.181.47  141.142.181.48  141.142.181.49  141.142.181.50  141.142.181.51  141.142.181.52  141.142.181.53  141.142.181.54  141.142.181.55  141.142.181.56  141.142.181.57  141.142.181.58  141.142.181.59  141.142.181.60  141.142.181.61  141.142.181.62  141.142.181.63  141.142.181.64  141.142.181.65  141.142.181.66  141.142.181.67  141.142.181.68  141.142.181.69  141.142.181.70  141.142.181.71  141.142.181.72  141.142.181.73  141.142.181.74  141.142.181.75  141.142.181.76  141.142.181.77  141.142.181.78  141.142.181.79  141.142.181.80  141.142.181.81  141.142.181.82  141.142.181.83  141.142.181.84  141.142.181.85  141.142.181.86  141.142.181.87  141.142.181.88  141.142.181.89  141.142.181.90  141.142.181.91  141.142.181.92  141.142.181.93  141.142.181.94  141.142.181.95  141.142.181.96  141.142.181.97  141.142.181.98  141.142.181.99  141.142.181.100  141.142.181.101  141.142.181.102  141.142.181.103  141.142.181.104  141.142.181.105  141.142.181.106  141.142.181.107  141.142.181.108  141.142.181.109  141.142.181.110  141.142.181.111  141.142.181.112  141.142.181.113  141.142.181.114  141.142.181.115  141.142.181.116  141.142.181.117  141.142.181.118  141.142.181.119  141.142.181.120  141.142.181.121  141.142.181.122  141.142.181.123  141.142.181.124  141.142.181.125  141.142.181.126  141.142.181.127  141.142.181.128  141.142.181.129  141.142.181.130  141.142.181.131  141.142.181.132  141.142.181.133  141.142.181.134  141.142.181.135  141.142.181.136  141.142.181.137  141.142.181.138  141.142.181.139  141.142.181.140  141.142.181.141  141.142.181.142  141.142.181.143  141.142.181.144  141.142.181.145  141.142.181.146  141.142.181.147  141.142.181.148  141.142.181.149  141.142.181.150  141.142.181.151  141.142.181.152  141.142.181.153  141.142.181.154  141.142.181.155  141.142.181.156  141.142.181.157  141.142.181.158  141.142.181.159  141.142.181.160  141.142.181.161  141.142.181.162  141.142.181.163  141.142.181.164  141.142.181.165  141.142.181.166  141.142.181.167  141.142.181.168  141.142.181.169  141.142.181.170  141.142.181.171  141.142.181.172  141.142.181.173  141.142.181.174  141.142.181.175  141.142.181.176  141.142.181.177  141.142.181.178  141.142.181.179  141.142.181.180  141.142.181.181  141.142.181.182  141.142.181.183  141.142.181.184  141.142.181.185  141.142.181.186  141.142.181.187  141.142.181.188  141.142.181.189  141.142.181.190  141.142.181.191  141.142.181.192  141.142.181.193  141.142.181.194  141.142.181.195  141.142.181.196  141.142.181.197  141.142.181.198  141.142.181.199  141.142.181.200  141.142.181.201  141.142.181.202  141.142.181.203  141.142.181.204  141.142.181.205  141.142.181.206  141.142.181.207  141.142.181.208  141.142.181.209  141.142.181.210  141.142.181.211  141.142.181.212  141.142.181.213  141.142.181.214  141.142.181.215  141.142.181.216  141.142.181.217  141.142.181.218  141.142.181.219  141.142.181.220  141.142.181.221  141.142.181.222  141.142.181.223  141.142.181.224  141.142.181.225  141.142.181.226  141.142.181.227  141.142.181.228  141.142.181.229  141.142.181.230  141.142.181.231  141.142.181.232  141.142.181.233  141.142.181.234  141.142.181.235  141.142.181.236  141.142.181.237  141.142.181.238  141.142.181.239  141.142.181.240  141.142.181.241  141.142.181.242  141.142.181.243  141.142.181.244 \
  141.142.181.245  141.142.181.246  141.142.181.247  141.142.181.248  141.142.181.249  141.142.181.250  141.142.181.251 } 
servers_181net = "<servers_181net>"
table <servers_des_campus> {   72.36.104.2  72.36.104.3  72.36.104.4  72.36.104.5  72.36.104.6  72.36.104.7  72.36.104.8  72.36.104.9  72.36.104.10  72.36.104.11  72.36.104.12  72.36.104.13  72.36.104.14  72.36.104.15  72.36.104.16  72.36.104.17  72.36.104.18  72.36.104.19  72.36.104.20  72.36.104.21  72.36.104.22  72.36.104.23  72.36.104.24  72.36.104.25  72.36.104.26  72.36.104.27  72.36.104.28  72.36.104.29  72.36.104.30  72.36.104.31  72.36.104.32  72.36.104.33 } 
servers_des_campus = "<servers_des_campus>"
table <servers_oracle> {   141.142.181.34  141.142.181.35  141.142.181.36  141.142.181.37  141.142.181.38  141.142.181.39  141.142.181.44  141.142.181.45  141.142.181.46  141.142.181.47  141.142.181.48  141.142.181.49  141.142.181.54  141.142.181.55  141.142.181.56 } 
servers_oracle = "<servers_oracle>"
slurm_verify_worker_svc = "{   6818  60000:63000 }"
sui_tomcat01_svc = "{   80  8080  8100 }"
table <uillinois_ntp> persist
uillinois_ntp = "<uillinois_ntp>"
table <vIP_lsstfw> {   141.142.130.203 } 
vIP_lsstfw = "<vIP_lsstfw>"
table <vIP_LSSTLAN> {   141.142.181.254 } 
vIP_LSSTLAN = "<vIP_LSSTLAN>"
web_svc = "{   80  443 }"
 
# Gateways
GWGW_WAN = " route-to ( ix0 141.142.130.201 ) "

 
set loginterface ix1.1881

set skip on pfsync0

scrub on $WAN all    fragment reassemble
scrub on $LAN all    fragment reassemble
scrub on $CONSOLE all    fragment reassemble
scrub on $SYNC all    fragment reassemble
scrub on $ESXMGMT all    fragment reassemble
scrub on $ESXIPMI all    fragment reassemble


no nat proto carp
no rdr proto carp
nat-anchor "natearly/*"
nat-anchor "natrules/*"


# Outbound NAT rules are disabled

# Load balancing anchor
rdr-anchor "relayd/*"
# TFTP proxy
rdr-anchor "tftp-proxy/*"
# UPnPd rdr anchor
rdr-anchor "miniupnpd"

anchor "relayd/*"
anchor "openvpn/*"
anchor "ipsec/*"
# block IPv4 link-local. Per RFC 3927, link local "MUST NOT" be forwarded by a routing device,
# and clients "MUST NOT" send such packets to a router. FreeBSD won't route 169.254./16, but
# route-to can override that, causing problems such as in redmine #2073
block in  quick from 169.254.0.0/16 to any tracker 1000000101 label "Block IPv4 link-local"
block in  quick from any to 169.254.0.0/16 tracker 1000000102 label "Block IPv4 link-local"
#---------------------------------------------------------------------------
# default deny rules
#---------------------------------------------------------------------------
block in  inet all tracker 1000000103 label "Default deny rule IPv4"
block out  inet all tracker 1000000104 label "Default deny rule IPv4"
block in  inet6 all tracker 1000000105 label "Default deny rule IPv6"
block out  inet6 all tracker 1000000106 label "Default deny rule IPv6"

# IPv6 ICMP is not auxilary, it is required for operation
# See man icmp6(4)
# 1    unreach         Destination unreachable
# 2    toobig          Packet too big
# 128  echoreq         Echo service request
# 129  echorep         Echo service reply
# 133  routersol       Router solicitation
# 134  routeradv       Router advertisement
# 135  neighbrsol      Neighbor solicitation
# 136  neighbradv      Neighbor advertisement
pass  quick inet6 proto ipv6-icmp from any to any icmp6-type {1,2,135,136} tracker 1000000107 keep state

# Allow only bare essential icmpv6 packets (NS, NA, and RA, echoreq, echorep)
pass out  quick inet6 proto ipv6-icmp from fe80::/10 to fe80::/10 icmp6-type {129,133,134,135,136} tracker 1000000108 keep state
pass out  quick inet6 proto ipv6-icmp from fe80::/10 to ff02::/16 icmp6-type {129,133,134,135,136} tracker 1000000109 keep state
pass in  quick inet6 proto ipv6-icmp from fe80::/10 to fe80::/10 icmp6-type {128,133,134,135,136} tracker 1000000110 keep state
pass in  quick inet6 proto ipv6-icmp from ff02::/16 to fe80::/10 icmp6-type {128,133,134,135,136} tracker 1000000111 keep state
pass in  quick inet6 proto ipv6-icmp from fe80::/10 to ff02::/16 icmp6-type {128,133,134,135,136} tracker 1000000112 keep state
# We use the mighty pf, we cannot be fooled.
block  quick inet proto { tcp, udp } from any port = 0 to any tracker 1000000113 label "Block traffic from port 0"
block  quick inet proto { tcp, udp } from any to any port = 0 tracker 1000000114 label "Block traffic to port 0"
block  quick inet6 proto { tcp, udp } from any port = 0 to any tracker 1000000115 label "Block traffic from port 0"
block  quick inet6 proto { tcp, udp } from any to any port = 0 tracker 1000000116 label "Block traffic to port 0"

# Snort package
block  quick from <snort2c> to any tracker 1000000117 label "Block snort2c hosts"
block  quick from any to <snort2c> tracker 1000000118 label "Block snort2c hosts"
block in  quick proto carp from (self) to any tracker 1000000201
pass  quick proto carp tracker 1000000202 no state

# SSH lockout
block in  quick proto tcp from <sshlockout> to (self) port 22 tracker 1000000301 label "sshlockout"

# webConfigurator lockout
block in  quick proto tcp from <webConfiguratorlockout> to (self) port 443 tracker 1000000351 label "webConfiguratorlockout"
block in  quick from <virusprot> to any tracker 1000000400 label "virusprot overload table"
antispoof  for $WAN tracker 1000001570
antispoof  for $LAN tracker 1000002620
antispoof  for $CONSOLE tracker 1000003670
antispoof  for $SYNC tracker 1000004720
antispoof  for $ESXMGMT tracker 1000005770
antispoof  for $ESXIPMI tracker 1000006820

# loopback
pass in  on $loopback inet all tracker 1000006861 label "pass IPv4 loopback"
pass out  on $loopback inet all tracker 1000006862 label "pass IPv4 loopback"
pass in  on $loopback inet6 all tracker 1000006863 label "pass IPv6 loopback"
pass out  on $loopback inet6 all tracker 1000006864 label "pass IPv6 loopback"
# let out anything from the firewall host itself and decrypted IPsec traffic
pass out  inet all keep state allow-opts tracker 1000006865 label "let out anything IPv4 from firewall host itself"
pass out  inet6 all keep state allow-opts tracker 1000006866 label "let out anything IPv6 from firewall host itself"

pass out  route-to ( ix0 141.142.130.201 ) from 141.142.130.204 to !141.142.130.200/29 tracker 1000006961 keep state allow-opts label "let out anything from firewall host itself"
pass out  route-to ( ix0 141.142.130.201 ) from 141.142.130.203 to !141.142.130.200/29 tracker 1000006962 keep state allow-opts label "let out anything from firewall host itself"

# User-defined rules follow

anchor "userrules/*"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $bgp_peer to 141.142.130.204 port 179 tracker 1471029391 flags S/SA keep state  label "USER_RULE: BGP traffic in from LSST core"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_manage to 141.142.130.204 port 443 tracker 1470939904 flags S/SA keep state  label "USER_RULE: Allow management from Manage Nodes (LSST-1173)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_manage to 141.142.130.204 port 22 tracker 1470946751 flags S/SA keep state  label "USER_RULE: ALLOW SSH from Manage Nodes  (LSST-1173)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto icmp  from 141.142.0.0/16 to (self) icmp-type echoreq tracker 1470939958 keep state  label "USER_RULE: allow NCSA to ping the firewall"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto icmp  from $server_IRSTnagios to (self) icmp-type echoreq tracker 1523460876 keep state  label "USER_RULE: allow secops nagios-dev to ping the firewall"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from 141.142.0.0/16 to $server_monitor port 443 tracker 1475863224 flags S/SA keep state  label "USER_RULE: HTTPS access from NCSA to Monitor"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_ncsa3003 to $server_monitor port 8086 tracker 1463059642 flags S/SA keep state  label "USER_RULE: push monitoring to collector (SECURITY-562, LSST-..."
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_ncsa3003 to $server_monitor port 1514 tracker 1519930532 flags S/SA keep state  label "USER_RULE: push syslog relp to collector (LSST-1175)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_qualysQ3 to $servers_181net port 22 tracker 1474549486 flags S/SA keep state  label "USER_RULE: ALLOW SSH from Qualys Q3"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_dev01 to $server_verifyworker port $slurm_verify_worker_svc tracker 1474407601 flags S/SA keep state  label "USER_RULE: ALLOW slurm from slurm controller"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_dev01 to $server_verifyworker port $condor_glideins_svc tracker 1480342202 flags S/SA keep state  label "USER_RULE: ALLOW condor glideins"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_dev01 to $server_verifyworker45 port 22 tracker 1533241507 flags S/SA keep state  label "USER_RULE: SSH from dev01 to verifyworker45 - Jake testing (..."
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_cerberus to $server_adm port 22 tracker 1471027925 flags S/SA keep state  label "USER_RULE: Cerberus SSH to ADM"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_cerberus to $server_bastion port 22 tracker 1475864515 flags S/SA keep state  label "USER_RULE: Cerberus SSH to bastion"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from 141.142.0.0/16 to $servers_181net port 1191 tracker 1475683829 flags S/SA keep state  label "USER_RULE: NCSA net gpfs to 1191 on 181 net (LSST-980)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from 141.142.0.0/16 to $servers_181net port 29999 >< 30101 tracker 1475683884 flags S/SA keep state  label "USER_RULE: NCSA net gpfs 30000-30100 on 181 net (LSST-980)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_ncsavpn to $server_sui_tomcat01 port $sui_tomcat01_svc tracker 1476889056 flags S/SA keep state  label "USER_RULE: NCSA VPN to sui-tomcat01"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_ncsavpn to $server_sui_proxy01 port $web_svc tracker 1476889090 flags S/SA keep state  label "USER_RULE: NCSA VPN to sui-proxy01"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_ncsavpn to $server_qserv_dax01 port $qserv_dax01_svc tracker 1476889115 flags S/SA keep state  label "USER_RULE: NCSA VPN to qserv-dax01"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $server_verify00 to $servers_181net port 22 tracker 1476904750 flags S/SA keep state  label "USER_RULE: verify00 SSH to hosts on 181net"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto icmp  from $server_verify00 to $servers_181net icmp-type echoreq tracker 1476977213 keep state  label "USER_RULE: verify00 ICMP request to hosts on 181net"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_qualysQ3 to $server_sui_proxy01 tracker 1504815996 flags S/SA keep state  label "USER_RULE"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_qualysQ3 to $server_sui_tomcat01 tracker 1504816043 flags S/SA keep state  label "USER_RULE"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from 141.142.0.0/16 to $servers_oracle port $oracle_svc tracker 1516716967 flags S/SA keep state  label "USER_RULE: NCSA net to LSST Oracle servers on Oracle ports (..."
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $servers_des_campus to $servers_oracle port $oracle_svc tracker 1523643745 flags S/SA keep state  label "USER_RULE: campus DES cluster to LSST Oracle servers on Orac..."
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from 141.142.0.0/16 to $server_kub017 port $web_svc tracker 1533242479 flags S/SA keep state  label "USER_RULE: allow NCSA network to test JupyterHub (LSST-1441)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from 141.142.0.0/16 to $server_lspdev port $web_svc tracker 1521573595 flags S/SA keep state  label "USER_RULE: allow NCSA network to lspdev (LSST-1191)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_lsst_aura to $server_lspdev port $web_svc tracker 1521573640 flags S/SA keep state  label "USER_RULE: allow LSST/AURA in Tucson to lspdev  (LSST-1191)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_caltech_ipac to $server_lspdev port $web_svc tracker 1531335255 flags S/SA keep state  label "USER_RULE: allow IPAC at Caltech access to lspdev  (LSST-1436)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_ctio to $server_lspdev port $web_svc tracker 1531335285 flags S/SA keep state  label "USER_RULE: allow CTIO at the base access to lspdev  (LSST-1436)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_princeton to $server_lspdev port $web_svc tracker 1531335308 flags S/SA keep state  label "USER_RULE: allow Princeton access to lspdev  (LSST-1436)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_upittsburg to $server_lspdev port $web_svc tracker 1531335345 flags S/SA keep state  label "USER_RULE: allow University of Pittsburg access to lspdev  (..."
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_uwashington to $server_lspdev port $web_svc tracker 1531335392 flags S/SA keep state  label "USER_RULE: allow University of Washington access to lspdev  ..."
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_uwisconsin to $server_lspdev port $web_svc tracker 1531749842 flags S/SA keep state  label "USER_RULE: allow University of Wisconsin access to lspdev  (..."
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_duke to $server_lspdev port $web_svc tracker 1531749979 flags S/SA keep state  label "USER_RULE: allow Duke University access to lspdev  (LSST-1446)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_harvard to $server_lspdev port $web_svc tracker 1531750030 flags S/SA keep state  label "USER_RULE: allow Harvard access to lspdev  (LSST-1446)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $lsst_2018_hotel to $server_lspdev port $web_svc tracker 1534032048 flags S/SA keep state  label "USER_RULE: LSP demo for LSST2018 SECURITY-818"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_ncsavpn to 172.24.16.32/27 port $ipmi_tcp_svc tracker 1527860070 flags S/SA keep state  label "USER_RULE: ncsa 2fa vpn tcp access to ipmi subnet (LSST-1233)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto udp  from $net_ncsavpn to 172.24.16.32/27 port $ipmi_udp_svc tracker 1527860102 keep state  label "USER_RULE: ncsa 2fa vpn udp access to ipmi subnet (LSST-1233)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto icmp  from 141.142.0.0/16 to 172.24.16.32/27 icmp-type echoreq tracker 1529441399 keep state  label "USER_RULE: ping from NCSA to esxipmi (LSST-1233)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_cerberus to 172.24.16.32/27 port $ipmi_tcp_svc tracker 1527860129 flags S/SA keep state  label "USER_RULE: cerberus tcp access to ipmi subnet (LSST-1233)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto udp  from $client_cerberus to 172.24.16.32/27 port $ipmi_udp_svc tracker 1527860159 keep state  label "USER_RULE: cerberus udp access to ipmi subnet (LSST-1233)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto icmp  from 141.142.0.0/16 to 172.24.16.0/27 icmp-type echoreq tracker 1529441314 keep state  label "USER_RULE: ping from NCSA to esxmgmt (LSST-1233)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $ncsa_vsphere to 172.24.16.0/27 port $full_esxi_tcp_svc tracker 1527860770 flags S/SA keep state  label "USER_RULE: vSphere tcp access to ESXi nodes (LSST-1233)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto udp  from $ncsa_vsphere to 172.24.16.0/27 port $full_esxi_udp_svc tracker 1527860799 keep state  label "USER_RULE: vSphere udp access to ESXi nodes (LSST-1233)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $client_cerberus to 172.24.16.0/27 port $partial_esxi_tcp_svc tracker 1527860852 flags S/SA keep state  label "USER_RULE: cerberus access to ESXi nodes (LSST-1233)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_ncsavpn to 172.24.16.0/27 port $partial_esxi_tcp_svc tracker 1527860889 flags S/SA keep state  label "USER_RULE: ncsa 2fa vpn access to ESXi nodes (LSST-1233)"
pass  in  quick  on $WAN reply-to ( ix0 141.142.130.201 ) inet proto tcp  from $net_ncsavpn to $data_backbone_temp port $web_svc tracker 1530625199 flags S/SA keep state  label "USER_RULE: temp allow while server is being vetted (LSST-1402)"
pass  in  quick  on $LAN inet proto icmp  from 141.142.181.0/24 to 141.142.181.252 icmp-type echoreq tracker 1474317397 keep state  label "USER_RULE: ping LAN address"
pass  in  quick  on $LAN inet proto icmp  from 141.142.181.0/24 to $vIP_LSSTLAN icmp-type echoreq tracker 1474317409 keep state  label "USER_RULE: ping LAN vIP"
block  in  quick  on $LAN inet from any to (self) tracker 1474317357  label "USER_RULE: Block talking to firewall from LAN"
pass  in  quick  on $LAN inet from 141.142.181.0/24 to any tracker 0100000101 keep state  label "USER_RULE: Default allow LAN to any rule"
# at the break! label "USER_RULE: Default allow LAN IPv6 to any rule"
pass  in  quick  on $CONSOLE inet proto tcp  from 192.168.2.0/24 to 192.168.2.4 port 443 tracker 1470941843 flags S/SA keep state  label "USER_RULE: ALLOW CONSOLE"
pass  in  quick  on $CONSOLE inet proto tcp  from 192.168.2.0/24 to 192.168.2.4 port 22 tracker 1470943252 flags S/SA keep state  label "USER_RULE: Console SSH"
pass  in  quick  on $SYNC inet from 192.168.0.0/24 to any tracker 1470940101 keep state  label "USER_RULE: SYNC Allow"
pass  in  quick  on $ESXMGMT inet proto icmp  from 172.24.16.0/27 to 172.24.16.0/27 icmp-type echoreq tracker 1527690055 keep state  label "USER_RULE: allow ping to the gateway"
pass  in  quick  on $ESXMGMT inet from 172.24.16.0/27 to 141.142.0.0/16 tracker 1528120125 keep state  label "USER_RULE: access out to NCSA"
pass  in  quick  on $ESXMGMT inet proto udp  from 172.24.16.0/27 to $uillinois_ntp port 123 tracker 1528120167 keep state  label "USER_RULE: ntp access to ntp.illinois.edu"
block  in  quick  on $ESXMGMT inet from any to any tracker 1528120194  label "USER_RULE: deny all"
pass  in  quick  on $ESXIPMI inet proto icmp  from 172.24.16.32/27 to 172.24.16.32/27 icmp-type echoreq tracker 1527690355 keep state  label "USER_RULE: allow ping to the gateway"
pass  in  quick  on $ESXIPMI inet from 172.24.16.32/27 to 141.142.0.0/16 tracker 1528120224 keep state  label "USER_RULE: access out to NCSA"
pass  in  quick  on $ESXIPMI inet proto udp  from 172.24.16.32/27 to $uillinois_ntp port 123 tracker 1528120243 keep state  label "USER_RULE: ntp access to ntp.illinois.edu"
block  in  quick  on $ESXIPMI inet from any to any tracker 1528120261  label "USER_RULE: deny all"

# VPN Rules

anchor "tftp-proxy/*"

